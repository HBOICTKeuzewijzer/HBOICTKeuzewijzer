// <auto-generated />
using System;
using HBOICTKeuzewijzer.Api.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HBOICTKeuzewijzer.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Cohort")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_ApplicationUser_Unique_Email");

                    b.HasIndex("ExternalId")
                        .IsUnique()
                        .HasDatabaseName("IX_ApplicationUser_Unique_ExternalId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ApplicationUserRoles");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccentColor")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryColor")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SlbApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SlbApplicationUserId");

                    b.HasIndex("StudentApplicationUserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.CustomModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("ECs")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CustomModules");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("SenderApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SlbRead")
                        .HasColumnType("bit");

                    b.Property<bool>("StudentRead")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SenderApplicationUserId");

                    b.HasIndex("ChatId", "SentAt")
                        .IsUnique()
                        .HasDatabaseName("IX_Message_ChatId_SentAt");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("ECs")
                        .HasColumnType("int");

                    b.Property<bool>("IsPropaedeutic")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("OerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrerequisiteJson")
                        .HasColumnType("text");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<int?>("RequiredSemester")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OerId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.ModuleReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("StudentId");

                    b.ToTable("ModuleReviews");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Oer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Filepath")
                        .HasMaxLength(260)
                        .HasColumnType("nvarchar(260)");

                    b.HasKey("Id");

                    b.ToTable("Oer");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AcquiredECs")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudyRouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomModuleId")
                        .IsUnique()
                        .HasFilter("[CustomModuleId] IS NOT NULL");

                    b.HasIndex("ModuleId");

                    b.HasIndex("StudyRouteId");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Slb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SlbApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SlbApplicationUserId");

                    b.HasIndex("StudentApplicationUserId");

                    b.ToTable("Slb");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.StudyRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("StudyRoutes");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Chat", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "SLB")
                        .WithMany()
                        .HasForeignKey("SlbApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "Student")
                        .WithMany()
                        .HasForeignKey("StudentApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SLB");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Message", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Module", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.Category", "Category")
                        .WithMany("Modules")
                        .HasForeignKey("CategoryId");

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.Oer", "Oer")
                        .WithMany("Modules")
                        .HasForeignKey("OerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Oer");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.ModuleReview", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.Module", "Module")
                        .WithMany("Reviews")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Semester", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.CustomModule", "CustomModule")
                        .WithOne("Semester")
                        .HasForeignKey("HBOICTKeuzewijzer.Api.Models.Semester", "CustomModuleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.Module", "Module")
                        .WithMany("Semesters")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.StudyRoute", "StudyRoute")
                        .WithMany("Semesters")
                        .HasForeignKey("StudyRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomModule");

                    b.Navigation("Module");

                    b.Navigation("StudyRoute");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Slb", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "SlbApplicationUser")
                        .WithMany()
                        .HasForeignKey("SlbApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "StudentApplicationUser")
                        .WithMany()
                        .HasForeignKey("StudentApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SlbApplicationUser");

                    b.Navigation("StudentApplicationUser");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.StudyRoute", b =>
                {
                    b.HasOne("HBOICTKeuzewijzer.Api.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("StudyRoutes")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserRoles");

                    b.Navigation("StudyRoutes");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Category", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.CustomModule", b =>
                {
                    b.Navigation("Semester");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Module", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.Oer", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("HBOICTKeuzewijzer.Api.Models.StudyRoute", b =>
                {
                    b.Navigation("Semesters");
                });
#pragma warning restore 612, 618
        }
    }
}
